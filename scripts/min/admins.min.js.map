{"version":3,"sources":["bargraph/admin.js","choropleth/admin.js","columns/admin.js","contents/admin.js","googlemaps/admin.js","html/admin.js","image/admin.js","imageslider/admin.js","scatterplot/admin.js","soundcloud/admin.js","splash/admin.js","table/admin.js","text/admin.js","vimeo/admin.js","vine/admin.js","youtube/admin.js"],"names":["$","loadData","block","container","find","get","json","val","data","JSON","parse","initTable","url","snowball","pluginsUrl","getJSON","colHeaders","columns","type","hot","Handsontable","rowHeaders","fixedRowsTop","columnSorting","manualColumnMove","manualColumnResize","contextMenu","multiSelect","persistantState","fillHandle","observeChanges","search","undo","readOnly","stretchH","afterChange","changes","source","this","getData","refreshOnChange","trigger","afterLoadData","afterInit","generatedJSON","jsonString","stringify","on","spacing","Math","floor","text","closest","iframe","map","contents","draw","contentWindow","drawBargraph","jQuery","mapType","reloadData","updateSettings","render","quantize","drawMap","initializeEditorAt","textarea","editor","CodeMirror","fromTextArea","mode","lineNumbers","lineWrapping","indentUnit","tabSize","theme","setSize","save","addNewColumn","selection","eq","addClass","each","index","removeClass","show","hide","checkbox","prop","activateSelectedButton","activateSelectedEditor","activeEditors","length","event","selectedIndex","fadeOut","stopPropagation","confirm","codeMirrorInstance","button","toTextArea","temp_textarea","temp_codeMirrorInstance","temp_checkbox","fadeIn","updateContents","html","buildContents","title","match","matches","elem","id","attr","push","forEach","content","document","ready","hasClass","mapParse","re","exec","zoom","maptype","size","mToZ","lat","lon","m","c","z","parseInt","round","log","LN2","props","borderradius","tb_show","window","original_send_to_editor","send_to_editor","imgurl","tb_remove","blockIndex","drawScatterplot","getTrackId","indexOf","getSoundCloudUrl","options","soundCloudUrl","key","hasOwnProperty","soundCloudLink","show_user","show_comments","visual","soundcloud_options","trackId","trackUrl","counter","quicktags","buttons","QTags","_buttonsInit","createTable","HTML","numRows","i","j","e","afterCreateRow","afterCreateCol","afterRemoveRow","afterRemoveCol","addButton","parseVideoURL","videoUrl","videoID","inputColor","outputColor","substring"],"mappings":"CAAA,SAAAA,GA6BA,QAAAC,GAAAC,GACA,GAAAC,GAAAD,EAAAE,KAAA,UAAAC,IAAA,GACAC,EAAAJ,EAAAE,KAAA,wBAAAG,KAEA,IAAAD,EAAA,CACA,GAAAE,GAAAC,KAAAC,MAAAJ,EACAK,GAAAT,EAAAC,EAAAK,OACA,CACA,GAAAI,GAAAC,SAAAC,WAAA,iCAEAd,GAAAe,QAAAH,EAAA,SAAAJ,GACAG,EAAAT,EAAAC,EAAAK,MA+BA,QAAAG,GAAAT,EAAAC,EAAAK,GACA,GAAAQ,IAAA,QAAA,UACAC,IAAAT,KAAA,QAAAU,KAAA,SAAAV,KAAA,QAAAU,KAAA,YAEAC,EAAA,GAAAC,cAAAjB,GACAK,KAAAA,EACAa,YAAA,EACAC,aAAA,EACAN,WAAAA,EACAC,QAAAA,EACAM,eAAA,EACAC,kBAAA,EACAC,oBAAA,EACAC,aAAA,EACAC,aAAA,EACAC,iBAAA,EACAC,YAAA,EACAC,gBAAA,EACAC,QAAA,EACAC,MAAA,EACAC,UAAA,EACAC,SAAA,MACAC,YAAA,SAAAC,EAAAC,GACA,GAAA7B,GAAA8B,KAAAC,SACAC,GAAAtC,EAAAM,GACA,aAAA6B,GACAnC,EAAAuC,QAAA,WAGAC,cAAA,WACA,GAAAlC,GAAA8B,KAAAC,SACAC,GAAAtC,EAAAM,IAEAmC,UAAA,WACAzC,EAAAuC,QAAA,YAIAvC,GAAAM,KAAA,MAAAW,GAGA,QAAAqB,GAAAtC,EAAAM,EAAA6B,GACA,GAAAO,GAAApC,EACAqC,EAAApC,KAAAqC,UAAAF,EAEA1C,GAAAE,KAAA,wBAAAG,IAAAsC,GAlHA7C,EAAA,kBAAA+C,GAAA,OAAA,2BAAA,WACA,GAAA7C,GAAAF,EAAAsC,MACAU,EAAAC,KAAAC,MAAA,IAAAlD,EAAAsC,MAAAlC,KAAA,YAAAG,OAAA,GACAP,GAAAsC,MAAAlC,KAAA,mBAAA+C,KAAAH,GAEA/C,EAAAC,KAGAF,EAAA,kBAAA+C,GAAA,eAAA,oCAAA,WACA,GAAA7C,GAAAF,EAAAsC,MAAAc,QAAA,4BACAJ,EAAAC,KAAAC,MAAA,IAAAlD,EAAAsC,MAAA/B,OAAA,GAEAL,GAAAE,KAAA,mBAAA+C,KAAAH,GACA9C,EAAAuC,QAAA,YAGAzC,EAAA,kBAAA+C,GAAA,WAAA,2BAAA,WACA,GAAA7C,GAAAF,EAAAsC,MACAe,EAAAnD,EAAAE,KAAA,qBACAkD,EAAAD,EAAAE,WAAAnD,KAAA,UACAoD,EAAAH,EAAA,GAAAI,cAAAC,YAEAJ,IAAAE,GACAA,EAAAH,EAAAE,WAAAnD,KAAA,gCA8FAuD,QCvHA,SAAA3D,GAqCA,QAAAC,GAAAC,GACA,GAEAI,GAFAH,EAAAD,EAAAE,KAAA,UAAAC,IAAA,GACAuD,EAAA1D,EAAAE,KAAA,4BAAAG,KASA,IALAD,EADA,QAAAsD,EACA1D,EAAAE,KAAA,4BAAAG,MAEAL,EAAAE,KAAA,8BAAAG,MAGA,CACA,GAAAC,GAAAC,KAAAC,MAAAJ,EACAK,GAAAT,EAAAC,EAAAK,EAAAoD,OACA,CACA,GAAAhD,GAAAC,SAAAC,WAAA,qCAAA8C,EAAA,OAEA5D,GAAAe,QAAAH,EAAA,SAAAJ,GACAG,EAAAT,EAAAC,EAAAK,EAAAoD,MAKA,QAAAC,GAAA3D,EAAA0D,GACA,GAEA5C,GACAV,EAFAa,GADAjB,EAAAE,KAAA,UAAAC,IAAA,GACAH,EAAAM,KAAA,OAYA,IARA,QAAAoD,GACAtD,EAAAJ,EAAAE,KAAA,4BAAAG,MACAS,GAAA,OAAA,QAAA,WAEAV,EAAAJ,EAAAE,KAAA,8BAAAG,MACAS,GAAA,OAAA,UAAA,UAGAV,EAAA,CACA,GAAAE,GAAAC,KAAAC,MAAAJ,EACAa,GAAA2C,gBACA9C,WAAAA,IAEAG,EAAAlB,SAAAO,GACAW,EAAA4C,aACA,CACA,GAAAnD,GAAAC,SAAAC,WAAA,qCAAA8C,EAAA,OAEA5D,GAAAe,QAAAH,EAAA,SAAAJ,GACAW,EAAA2C,gBACA9C,WAAAA,IAEAG,EAAAlB,SAAAO,GACAW,EAAA4C,YAKA,QAAApD,GAAAT,EAAAC,EAAAK,EAAAoD,GACA,GAAA5C,IAAA,OAAA,UAAA,QAEA,SAAA4C,IACA5C,GAAA,OAAA,QAAA,SAGA,IAAAG,GAAA,GAAAC,cAAAjB,GACAK,KAAAA,EACAa,YAAA,EACAC,aAAA,EACAN,WAAAA,EACAC,UAAAT,KAAA,OAAAyB,UAAA,IAAAzB,KAAA,QAAAyB,UAAA,IAAAzB,KAAA,UACAe,eAAA,EACAC,kBAAA,EACAC,oBAAA,EACAC,aAAA,EACAC,aAAA,EACAC,iBAAA,EACAC,YAAA,EACAC,gBAAA,EACAC,QAAA,EACAC,MAAA,EACAC,UAAA,EACAC,SAAA,MACAC,YAAA,SAAAC,EAAAC,GACA,GAAA7B,GAAA8B,KAAAC,SACAC,GAAAtC,EAAAM,GACA,aAAA6B,GACAnC,EAAAuC,QAAA,WAGAC,cAAA,WACA,GAAAlC,GAAA8B,KAAAC,SACAC,GAAAtC,EAAAM,IAEAmC,UAAA,WACAzC,EAAAuC,QAAA,YAIAvC,GAAAM,KAAA,MAAAW,GAGA,QAAAqB,GAAAtC,EAAAM,EAAA6B,GACA,GAAAO,GAAApC,EACAqC,EAAApC,KAAAqC,UAAAF,GACAgB,EAAA1D,EAAAE,KAAA,4BAAAG,KAEAL,GAAAE,KAAA,sBAAAwD,EAAA,MAAArD,IAAAsC,GA7IA7C,EAAA,kBAAA+C,GAAA,OAAA,6BAAA,WACA,GAAA7C,GAAAF,EAAAsC,MACA0B,EAAA9D,EAAAE,KAAA,4BAAAG,KAEAP,GAAAsC,MAAAlC,KAAA,oBAAA+C,KAAAa,GAEA/D,EAAAC,KAGAF,EAAA,kBAAA+C,GAAA,WAAA,6BAAA,WACA,GAAA7C,GAAAF,EAAAsC,MACAe,EAAAnD,EAAAE,KAAA,qBACAkD,EAAAD,EAAAE,WAAAnD,KAAA,QACAoD,EAAAH,EAAA,GAAAI,cAAAQ,OAEAX,IAAAE,GACAA,EAAAH,EAAAE,WAAAnD,KAAA,iCAIAJ,EAAA,kBAAA+C,GAAA,SAAA,sDAAA,WACA,GAAA7C,GAAAF,EAAAsC,MAAAc,QAAA,8BACAQ,EAAA5D,EAAAsC,MAAA/B,KAEAsD,GAAA3D,EAAA0D,KAGA5D,EAAA,kBAAA+C,GAAA,eAAA,sDAAA,WACA,GAAA7C,GAAAF,EAAAsC,MAAAc,QAAA,8BAEAY,GADA9D,EAAAM,KAAA,OACAR,EAAAsC,MAAA/B,MAEAL,GAAAE,KAAA,oBAAA+C,KAAAa,MAgHAL,QClJA,SAAA3D,GAqBA,QAAAkE,GAAAC,GACA,GAAAC,GAAAC,WAAAC,aAAAH,EAAA,IACAI,KAAA,YACAC,aAAA,EACAC,cAAA,EACAC,WAAA,EACAC,QAAA,EACAC,MAAA,WAGAR,GAAAS,QAAA,OAAA,QAEAT,EAAArB,GAAA,SAAA,WACAqB,EAAAU,OACAX,EAAA1B,QAAA,YAGA0B,EAAA3D,KAAA,qBAAA4D,GA4BA,QAAAW,GAAA7E,EAAA8E,GACA9E,EAAAE,KAAA,kBAAA6E,GAAAD,GAAAE,SAAA,OAEA,IAAAf,GAAAjE,EAAAE,KAAA,oBAAA6E,GAAAD,EACAd,GAAAC,GAEAjE,EAAAE,KAAA,kCAAA+E,KAAA,SAAAC,GACAA,IAAAJ,EACAhF,EAAAsC,MAAA4C,SAAA,UAEAlF,EAAAsC,MAAA+C,YAAA,YAIAnF,EAAAE,KAAA,eAAA+E,KAAA,SAAAC,GACAA,IAAAJ,EACAhF,EAAAsC,MAAAgD,OAEAtF,EAAAsC,MAAAiD,QAIA,IAAAC,GAAAtF,EAAAE,KAAA,qBAAA6E,GAAAD,EACAQ,GAAAC,KAAA,WAAA,GAsEA,QAAAC,GAAAxF,EAAA8E,GACA9E,EAAAE,KAAA,SAAA+E,KAAA,SAAAC,GACAA,IAAAJ,EACAhF,EAAAsC,MAAA4C,SAAA,UAEAlF,EAAAsC,MAAA+C,YAAA,YAKA,QAAAM,GAAAzF,EAAA8E,GACA9E,EAAAE,KAAA,eAAA+E,KAAA,SAAAC,GACAA,IAAAJ,EACAhF,EAAAsC,MAAAgD,OAEAtF,EAAAsC,MAAAiD,SA7KAvF,EAAA,kBAAA+C,GAAA,OAAA,0BAAA,WACA,GAAA7C,GAAAF,EAAAsC,KAEApC,GAAAE,KAAA,0BAAA+E,KAAA,SAAAC,GACA,GAAApF,EAAAsC,MAAAmD,KAAA,WAAA,CACA,GAAAtB,GAAAjE,EAAAE,KAAA,oBAAA6E,GAAAG,EACAlB,GAAAC,GACAjE,EAAAE,KAAA,kBAAA6E,GAAAG,GAAAF,SAAA,WAIAhF,EAAAE,KAAA,eAAAmF,OAAAN,GAAA,GAAAK,OACApF,EAAAE,KAAA,kBAAA6E,GAAA,GAAAC,SAAA,SAEA,IAAAU,GAAA1F,EAAAE,KAAA,SAAAyF,MACA,IAAAD,GACA1F,EAAAE,KAAA,eAAAmF,SAwBAvF,EAAA,kBAAA+C,GAAA,QAAA,yCAAA,SAAA+C,GACA,GAAA5F,GAAAF,EAAAsC,MAAAc,QAAA,2BACA2C,EAAA7F,EAAAE,KAAA,kCAAAgF,MAAApF,EAAAsC,MAEAoD,GAAAxF,EAAA6F,GACAJ,EAAAzF,EAAA6F,KAGA/F,EAAA,kBAAA+C,GAAA,QAAA,sCAAA,SAAA+C,GACA,GAAA5F,GAAAF,EAAAsC,MAAAc,QAAA,2BAEAwC,EAAA1F,EAAAE,KAAA,SAAAyF,MACA,IAAAD,GACA1F,EAAAE,KAAA,eAAA4F,QAAA,KAGA9F,EAAAE,KAAA,qBAAA+E,KAAA,SAAAC,GACA,MAAApF,GAAAsC,MAAAmD,KAAA,WAAA,QACAV,EAAA7E,EAAAkF,IACA,KAGAlF,EAAAuC,QAAA,YA6BAzC,EAAA,kBAAA+C,GAAA,QAAA,yCAAA,SAAA+C,GAGA,GAFAA,EAAAG,kBAEAC,QAAA,gDAAA,CACA,GAIA/B,GACAgC,EACAX,EANAtF,EAAAF,EAAAsC,MAAAc,QAAA,2BACAgD,EAAApG,EAAAsC,MAAAc,QAAA,kBACA2C,EAAA7F,EAAAE,KAAA,kCAAAgF,MAAAgB,GACAR,EAAA1F,EAAAE,KAAA,SAAAyF,MAKA,IAAAE,GAAAH,EAAA,EACAzB,EAAAjE,EAAAE,KAAA,oBAAA6E,GAAAc,GACAI,EAAAhC,EAAA3D,KAAA,sBAEAgF,EAAAtF,EAAAE,KAAA,qBAAA6E,GAAAc,GACAP,EAAAC,KAAA,WAAA,GAEAU,EAAAE,aACAlC,EAAA5D,IAAA,IAEAL,EAAAE,KAAA,SAAA6E,GAAAc,GAAAV,YAAA,QAEAK,EAAAxF,EAAA6F,EAAA,GACAJ,EAAAzF,EAAA6F,EAAA,GAEA7F,EAAAE,KAAA,eAAA6E,GAAAc,EAAA,GAAAT,WAEA,MAAAM,EAAA,EAAAG,GAAA,CACA5B,EAAAjE,EAAAE,KAAA,oBAAA6E,GAAAc,GACAI,EAAAhC,EAAA3D,KAAA,sBAEA2F,EAAAE,aAEAb,EAAAtF,EAAAE,KAAA,qBAAA6E,GAAA,GACAO,EAAAC,KAAA,WAAA,EAEA,IAAAa,GAAApG,EAAAE,KAAA,oBAAA6E,GAAAc,EAAA,GACAQ,EAAAD,EAAA9F,KAAA,qBAEA+F,GAAAF,YAEA,IAAAG,GAAAtG,EAAAE,KAAA,qBAAA6E,GAAAc,EAAA,EACAS,GAAAf,KAAA,WAAA,GAEAtB,EAAA5D,IAAA+F,EAAA/F,OACA2D,EAAAC,GAEA4B,GAAAH,EAAA,IACA1F,EAAAE,KAAA,SAAA6E,GAAAc,EAAA,GAAAV,YAAA,QACAO,EAAA1F,EAAAE,KAAA,SAAAyF,OAEA3F,EAAAE,KAAA,oBAAA6E,GAAAc,EAAA,GAAAxF,IAAA,KAGAwF,GAAA,EAIA7F,EAAAuC,QAAA,UACAiD,EAAAxF,EAAA6F,EAAA,GAGA/F,EAAAsC,MAAAc,QAAA,2BAAAhD,KAAA,eAAAqG,OAAA,QAsBA9C,QClLA,SAAA3D,GAmBA,QAAA0G,GAAAxG,GACA,GAAAyG,GAAAC,GAEA,oBAAA1G,GACAF,EAAA,4BAAAmF,KAAA,WACA,GAAAjF,GAAAF,EAAAsC,KACAtC,GAAAsC,MAAAlC,KAAA,SAAAG,IAAAoG,GACAzG,EAAAuC,QAAA,aAGAvC,EAAAE,KAAA,SAAAG,IAAAoG,GACAzG,EAAAuC,QAAA,WAIA,QAAAmE,KACA,GAAArD,MACAoD,EAAA,MA0BA,OAxBA3G,GAAA,mBAAAmF,KAAA,WACA,GAAA0B,GAAA7G,EAAAsC,MAAAlC,KAAA,mBAAA+C,OACA2D,EAAA,OACAC,EAAA/G,EAAAsC,MAAAlC,KAAA,qBAAAmD,WAAAnD,KAAA0G,EAEA,cAAAD,GACAE,EAAA5B,KAAA,WACA,GAAA6B,IACAC,GAAAjH,EAAAsC,MAAA4E,KAAA,MACA/D,KAAAnD,EAAAsC,MAAAa,OAGAI,GAAA4D,KAAAH,OAKAzD,EAAA6D,QAAA,SAAAJ,EAAA5B,GACA,GAAAiC,GAAA,iBAAAL,EAAAC,GAAA,KAAAD,EAAA7D,KAAA,WACAwD,IAAAU,IAGAV,GAAA,QA1DA3G,EAAAsH,UAAAC,MAAA,WACAb,MAGA1G,EAAA,kBAAA+C,GAAA,WAAA,kBAAA,WAEA/C,EAAAsC,MAAAkF,SAAA,4BAIAd,MAGA1G,EAAA,kBAAA+C,GAAA,OAAA,2BAAA,WACA2D,EAAA1G,EAAAsC,UAiDAqB,QCjEA,SAAA3D,GA4BA,QAAAyH,GAAA7G,GACA,GAAA8G,GAAA,2DACAX,EAAAW,EAAAC,KAAA/G,EAEA,IAAA,OAAAmG,EAAA,CACA,GAAAa,GAAAb,EAAA,GACAc,EAAAd,EAAA,GACAe,EAAA,SASA,OAPA,MAAAD,GACAA,EAAA,YACAD,EAAAG,EAAAH,IAEAC,EAAA,WAIAG,IAAAjB,EAAA,GACAkB,IAAAlB,EAAA,GACAc,QAAAA,EACAD,KAAAA,EACAE,KAAAA,IAKA,QAAAC,GAAAG,GACA,GAAAC,GAAA,SACAC,EAAAD,EAAAE,SAAAH,EAAA,GAIA,OAFAE,GAAAnF,KAAAqF,MAAA,EAAArF,KAAAsF,IAAAH,GAAAnF,KAAAuF,KAxDAxI,EAAA,kBAAA+C,GAAA,OAAA,6BAAA,WACA,GAAA6E,GAAA5H,EAAAsC,MAAAlC,KAAA,SAAAG,KACAP,GAAAsC,MAAAlC,KAAA,gBAAA+C,KAAAyE,KAGA5H,EAAA,kBAAA+C,GAAA,eAAA,uCAAA,WACA,GAAA7C,GAAAF,EAAAsC,MAAAc,QAAA,8BACAxC,EAAAZ,EAAAsC,MAAA/B,MACAkI,EAAAhB,EAAA7G,EAEAV,GAAAE,KAAA,uBAAAG,IAAAkI,EAAAT,KACA9H,EAAAE,KAAA,uBAAAG,IAAAkI,EAAAR,KACA/H,EAAAE,KAAA,wBAAAG,IAAAkI,EAAAb,MACA1H,EAAAE,KAAA,gBAAA+C,KAAAsF,EAAAb,MACA1H,EAAAE,KAAA,kCAAAqI,EAAAZ,QAAA,MAAApC,KAAA,WAAA,GAEAvF,EAAAuC,QAAA,YAGAzC,EAAA,kBAAA+C,GAAA,eAAA,mCAAA,WACA,GAAA7C,GAAAF,EAAAsC,MAAAc,QAAA,8BACAwE,EAAA5H,EAAAsC,MAAA/B,KAEAL,GAAAE,KAAA,gBAAA+C,KAAAyE,MAsCAjE,QC/DA,SAAA3D,GAEAA,EAAA,kBAAA+C,GAAA,OAAA,uBAAA,WAEA,GAAA7C,GAAAF,EAAAsC,MACA6B,EAAAjE,EAAAE,KAAA,YAEAgE,EAAAC,WAAAC,aAAAH,EAAA,IACAI,KAAA,YACAC,aAAA,EACAC,cAAA,EACAC,WAAA,EACAC,QAAA,EACAC,MAAA,WAGAR,GAAAS,QAAA,OAAA,QAEAT,EAAArB,GAAA,SAAA,WACAqB,EAAAU,OACAX,EAAA1B,QAAA,eAIAkB,QCxBA,SAAA3D,GACAA,EAAA,kBAAA+C,GAAA,OAAA,wBAAA,WACA,GAAA2F,GAAA1I,EAAAsC,MAAAlC,KAAA,sBAAAG,MAAA,GACAP,GAAAsC,MAAAlC,KAAA,6BAAA+C,KAAAuF,KAGA1I,EAAAsH,UAAAC,MAAA,WACA,GAAAnC,EAEApF,GAAA,kBAAA+C,GAAA,QAAA,6CAAA,WACA,GAAA7C,GAAAF,EAAAsC,MAAAc,QAAA,kBAaA,OAZAgC,GAAApF,EAAA,mBAAAoF,MAAAlF,GACAyI,QAAA,GAAA,8CAEAC,OAAAC,wBAAAD,OAAAE,eACAF,OAAAE,eAAA,SAAAnC,GACA,GAAAzG,GAAAF,EAAA,mBAAAiF,GAAAG,EACA2D,QAAA/I,EAAA,MAAA2G,GAAAO,KAAA,OACAhH,EAAAE,KAAA,iBAAAG,IAAAwI,QAAAtG,QAAA,UACAuG,YACAJ,OAAAE,eAAAF,OAAAC,0BAGA,IAGA7I,EAAA,kBAAA+C,GAAA,eAAA,2CAAA,WACA,GAAA7C,GAAAF,EAAAsC,MAAAc,QAAA,yBACAsF,EAAA1I,EAAAsC,MAAA/B,MAAA,GAEAL,GAAAE,KAAA,6BAAA+C,KAAAuF,GACAxI,EAAAuC,QAAA,eAIAkB,QCnCA,SAAA3D,GAEAA,EAAA,kBAAA+C,GAAA,OAAA,8BAAA,WACA,GAAA2F,GAAA1I,EAAAsC,MAAAlC,KAAA,sBAAAG,MAAA,GACAP,GAAAsC,MAAAlC,KAAA,6BAAA+C,KAAAuF,KAGA1I,EAAAsH,UAAAC,MAAA,WACA,GAAA0B,EAEAjJ,GAAA,kBAAA+C,GAAA,QAAA,mDAAA,WACA,GAAA7C,GAAAF,EAAAsC,MAAAc,QAAA,kBACA6F,GAAAjJ,EAAA,mBAAAoF,MAAAlF,EACA,IAAAkF,GAAAlF,EAAAE,KAAA,wBAAAgF,MAAApF,EAAAsC,MAYA,OAXAqG,SAAA,GAAA,8CAEAC,OAAAC,wBAAAD,OAAAE,eACAF,OAAAE,eAAA,SAAAnC,GACA,GAAAzG,GAAAF,EAAA,mBAAAiF,GAAAgE,EACAF,QAAA/I,EAAA,MAAA2G,GAAAO,KAAA,OACAhH,EAAAE,KAAA,iBAAA6E,GAAAG,GAAA7E,IAAAwI,QAAAtG,QAAA,UACAuG,YACAJ,OAAAE,eAAAF,OAAAC,0BAGA,OAIAlF,QC7BA,SAAA3D,GA6BA,QAAAC,GAAAC,GACA,GAAAC,GAAAD,EAAAE,KAAA,UAAAC,IAAA,GACAC,EAAAJ,EAAAE,KAAA,wBAAAG,KAEA,IAAAD,EAAA,CACA,GAAAE,GAAAC,KAAAC,MAAAJ,EACAK,GAAAT,EAAAC,EAAAK,OACA,CACA,GAAAI,GAAAC,SAAAC,WAAA,oCAEAd,GAAAe,QAAAH,EAAA,SAAAJ,GACAG,EAAAT,EAAAC,EAAAK,MA+BA,QAAAG,GAAAT,EAAAC,EAAAK,GACA,GAAAQ,IAAA,QAAA,IAAA,KACAC,IAAAT,KAAA,QAAAU,KAAA,SAAAV,KAAA,IAAAU,KAAA,YAAAV,KAAA,IAAAU,KAAA,YAEAC,EAAA,GAAAC,cAAAjB,GACAK,KAAAA,EACAa,YAAA,EACAC,aAAA,EACAN,WAAAA,EACAC,QAAAA,EACAM,eAAA,EACAC,kBAAA,EACAC,oBAAA,EACAC,aAAA,EACAC,aAAA,EACAC,iBAAA,EACAC,YAAA,EACAC,gBAAA,EACAC,QAAA,EACAC,MAAA,EACAC,UAAA,EACAC,SAAA,MACAC,YAAA,SAAAC,EAAAC,GACA,GAAA7B,GAAA8B,KAAAC,SACAC,GAAAtC,EAAAM,GACA,aAAA6B,GACAnC,EAAAuC,QAAA,WAGAC,cAAA,WACA,GAAAlC,GAAA8B,KAAAC,SACAC,GAAAtC,EAAAM,IAEAmC,UAAA,WACAzC,EAAAuC,QAAA,YAIAvC,GAAAM,KAAA,MAAAW,GAGA,QAAAqB,GAAAtC,EAAAM,EAAA6B,GACA,GAAAO,GAAApC,EACAqC,EAAApC,KAAAqC,UAAAF,EAEA1C,GAAAE,KAAA,wBAAAG,IAAAsC,GAlHA7C,EAAA,kBAAA+C,GAAA,OAAA,8BAAA,WACA,GAAA7C,GAAAF,EAAAsC,MACAwF,EAAA9H,EAAAsC,MAAAlC,KAAA,SAAAG,MAAA,IACAP,GAAAsC,MAAAlC,KAAA,gBAAA+C,KAAA2E,GAEA7H,EAAAC,KAGAF,EAAA,kBAAA+C,GAAA,eAAA,oCAAA,WACA,GAAA7C,GAAAF,EAAAsC,MAAAc,QAAA,+BACA0E,EAAA9H,EAAAsC,MAAA/B,MAAA,IAEAL,GAAAE,KAAA,gBAAA+C,KAAA2E,GACA5H,EAAAuC,QAAA,YAGAzC,EAAA,kBAAA+C,GAAA,WAAA,8BAAA,WACA,GAAA7C,GAAAF,EAAAsC,MACAe,EAAAnD,EAAAE,KAAA,qBACAkD,EAAAD,EAAAE,WAAAnD,KAAA,UACAoD,EAAAH,EAAA,GAAAI,cAAAyF,eAEA5F,IAAAE,GACAA,EAAAH,EAAAE,WAAAnD,KAAA,mCA8FAuD,QCvHA,SAAA3D,GACA,QAAAmJ,GAAAvI,GACA,GAAA8G,EAEA,IAAA9G,GAAAA,EAAAwI,QAAA,8BAAA,EAAA,CACA1B,EAAA,oCACA,IAAAX,GAAAW,EAAAC,KAAA/G,EACA,IAAAmG,EAAA,GACA,MAAAA,GAAA,GAIA,MAAA,GAGA,QAAAsC,GAAApC,EAAAqC,GACA,GAAAC,GAAA,yEACAA,GAAAA,EAAAtC,EAAA,qCACA,KAAA,GAAAuC,KAAAF,GACAA,EAAAG,eAAAD,KACAD,EAAAA,EAAA,IAAAC,EAAA,IAAAF,EAAAE,GAGA,OAAAD,GAGAvJ,EAAA,kBAAA+C,GAAA,OAAA,6BAAA,WACA,GAAA7C,GAAAF,EAAAsC,MAAAc,QAAA,8BACAsG,EAAA1J,EAAAE,GAAAE,KAAA,iCAAAG,MAIAoJ,GAHA3J,EAAAE,GACAE,KAAA,qBAAAmD,WACAnD,KAAA,iBACAJ,EAAAE,GAAAE,KAAA,gCAAAqF,KAAA,YACAmE,EAAA5J,EAAAE,GAAAE,KAAA,oCAAAqF,KAAA,WACAoE,EAAA7J,EAAAE,GAAAE,KAAA,6BAAAqF,KAAA,WACAqE,GACAH,UAAAA,EACAC,cAAAA,EACAC,OAAAA,GAEAE,EAAAZ,EAAAO,GACAM,EAAAX,EAAAU,EAAAD,EACA9J,GAAAE,GAAAE,KAAA,cAAAG,IAAAyJ,GAEA9J,EAAAuC,QAAA,YAGAzC,EAAA,kBAAA+C,GAAA,eAAA,6BAAA,WACA,GAAA7C,GAAAF,EAAAsC,MAAAc,QAAA,8BACAsG,EAAA1J,EAAAE,GAAAE,KAAA,iCAAAG,MAIAoJ,GAHA3J,EAAAE,GACAE,KAAA,qBAAAmD,WACAnD,KAAA,iBACAJ,EAAAE,GAAAE,KAAA,gCAAAqF,KAAA,YACAmE,EAAA5J,EAAAE,GAAAE,KAAA,oCAAAqF,KAAA,WACAoE,EAAA7J,EAAAE,GAAAE,KAAA,6BAAAqF,KAAA,WACAqE,GACAH,UAAAA,EACAC,cAAAA,EACAC,OAAAA,GAEAE,EAAAZ,EAAAO,GACAM,EAAAX,EAAAU,EAAAD,EAEA9J,GAAAE,GAAAE,KAAA,cAAAG,IAAAyJ,GACA9J,EAAAuC,QAAA,aAEAkB,QCnEA,SAAA3D,GAEA,GAAAiK,GAAA,CACAjK,GAAA,kBAAA+C,GAAA,OAAA,yBAAA,WACA,GAAAoB,GAAAnE,EAAAsC,MAAAlC,KAAA,YACA6G,EAAA,kCAAAgD,CACA9F,GAAA+C,KAAA,KAAAD,GACAgD,IAEAC,WACAjD,GAAAA,EACAkD,QAAA,6CAGAC,MAAAC,iBAGArK,EAAA,kBAAA+C,GAAA,QAAA,oDAAA,WACA/C,EAAAsC,MAAAc,QAAA,mBAAAX,QAAA,YAGAzC,EAAAsH,UAAAC,MAAA,WACA,GAAAnC,EAEApF,GAAA,kBAAA+C,GAAA,QAAA,8CAAA,WACA,GAAA7C,GAAAF,EAAAsC,MAAAc,QAAA,kBAaA,OAZAgC,GAAApF,EAAA,mBAAAoF,MAAAlF,GACAyI,QAAA,GAAA,8CAEAC,OAAAC,wBAAAD,OAAAE,eACAF,OAAAE,eAAA,SAAAnC,GACA,GAAAzG,GAAAF,EAAA,mBAAAiF,GAAAG,EACA2D,QAAA/I,EAAA,MAAA2G,GAAAO,KAAA,OACAhH,EAAAE,KAAA,iBAAAG,IAAAwI,QAAAtG,QAAA,UACAuG,YACAJ,OAAAE,eAAAF,OAAAC,0BAGA,OAIAlF,QC1CA,SAAA3D,GAiDA,QAAAwC,GAAAtC,EAAAM,GACA,GAAAqC,GAAApC,KAAAqC,UAAAtC,EAEAN,GAAAE,KAAA,wBAAAG,IAAAsC,GACA3C,EAAAE,KAAA,wBAAAG,IAAA+J,EAAA9J,IAGA,QAAA8J,GAAA7J,GAIA,IAAA,GAHA8J,GAAA,cACAC,EAAA/J,EAAAoF,OAEA4E,EAAA,EAAAD,EAAAC,EAAAA,IAAA,CACA,IAAAA,EACAF,GAAA,gBACA,IAAAE,IACAF,GAAA,+BAEAA,GAAA,cACA,KAAA,GAAAG,GAAA,EAAAA,EAAAjK,EAAAgK,GAAA5E,OAAA6E,IACA,OAAAjK,EAAAgK,GAAAC,KACAjK,EAAAgK,GAAAC,GAAA,IAIAH,EADA,IAAAE,EACAF,EAAA,eAAA9J,EAAAgK,GAAAC,GAAA,UAEAH,EAAA,eAAA9J,EAAAgK,GAAAC,GAAA,SAIAH,IAAA,gBAKA,MAFAA,IAAA,2BAjFAvK,EAAA,kBAAA+C,GAAA,OAAA,wBAAA,WACA,CAAA,GAAA7C,GAAAF,EAAAsC,MACAnC,EAAAD,EAAAE,KAAA,UAAAC,IAAA,GACAG,EAAAC,KAAAC,MAAAR,EAAAE,KAAA,wBAAAG,MAEA,IAAAa,cAAAjB,GACAK,KAAAA,EACAa,YAAA,EACAC,aAAA,EACAN,YAAA,EACAO,eAAA,EACAC,kBAAA,EACAC,oBAAA,EACAC,aAAA,EACAC,aAAA,EACAC,iBAAA,EACAC,YAAA,EACAC,gBAAA,EACAC,QAAA,EACAC,MAAA,EACAC,UAAA,EACAC,SAAA,MACAS,UAAA,SAAAgI,GACAnI,EAAAtC,EAAAM,GACAN,EAAAuC,QAAA,WAEAN,YAAA,SAAAwI,GACAnI,EAAAtC,EAAAM,IAEAoK,eAAA,SAAAD,GACAnI,EAAAtC,EAAAM,GACAN,EAAAuC,QAAA,WAEAoI,eAAA,SAAAF,GACAnI,EAAAtC,EAAAM,GACAN,EAAAuC,QAAA,WAEAqI,eAAA,SAAAH,GACAnI,EAAAtC,EAAAM,GACAN,EAAAuC,QAAA,WAEAsI,eAAA,SAAAJ,GACAnI,EAAAtC,EAAAM,GACAN,EAAAuC,QAAA,iBA2CAkB,QCvFA,SAAA3D,GACA,GAAAiK,GAAA,CACAG,OAAAY,UAAA,QAAA,KAAA,SAAA,GAAA,IAAA,uBAAA,IAEAhL,EAAA,kBAAA+C,GAAA,OAAA,uBAAA,WACA,GAAAoB,GAAAnE,EAAAsC,MAAAlC,KAAA,YACA6G,EAAA,gCAAAgD,CACA9F,GAAA+C,KAAA,KAAAD,GACAgD,IAEAC,WACAjD,GAAAA,EACAkD,QAAA,2DAGAC,MAAAC,iBAGArK,EAAA,kBAAA+C,GAAA,QAAA,kDAAA,WACA/C,EAAAsC,MAAAc,QAAA,mBAAAX,QAAA,aAGAkB,QCtBA,SAAA3D,GAyBA,QAAAiL,GAAAC,GACA,GAAAxD,EAGAA,GADAwD,EAAA9B,QAAA,UAAA,EACA,2BAEA,iBAGA,IAAArC,GAAAW,EAAAC,KAAAuD,EAEA,OAAAnE,GAAA,GAnCA/G,EAAA,kBAAA+C,GAAA,OAAA,wBAAA,WACA,GAAAmI,GAAAlL,EAAAsC,MAAAlC,KAAA,cAAAG,MACA4K,EAAAF,EAAAC,EAEAlL,GAAAsC,MAAAlC,KAAA,aAAAG,IAAA4K,GACAnL,EAAAsC,MAAAG,QAAA,YAGAzC,EAAA,kBAAA+C,GAAA,eAAA,mCAAA,WACA,GAAA7C,GAAAF,EAAAsC,MAAAc,QAAA,yBACA8H,EAAAlL,EAAAsC,MAAA/B,MACA4K,EAAAF,EAAAC,EAEAhL,GAAAE,KAAA,aAAAG,IAAA4K,GACAjL,EAAAuC,QAAA,YAGAzC,EAAA,kBAAA+C,GAAA,eAAA,4DAAA,WACA,GACAqI,IADApL,EAAAsC,MAAAc,QAAA,yBACApD,EAAAsC,MAAA/B,OACA8K,EAAA,UAAAD,EAAAE,UAAA,EACAtL,GAAA,wCAAAO,IAAA8K,MAgBA1H,QCtCA,SAAA3D,GAmBA,QAAAiL,GAAAC,GACA,GAAAxD,EAGAA,GADAwD,EAAA9B,QAAA,UAAA,EACA,0BAEA,kBAGA,IAAArC,GAAAW,EAAAC,KAAAuD,EACA,OAAAnE,GAAA,GA3BA/G,EAAA,kBAAA+C,GAAA,OAAA,uBAAA,WACA,GAAAmI,GAAAlL,EAAAsC,MAAAlC,KAAA,cAAAG,MACA4K,EAAAF,EAAAC,EAEAlL,GAAAsC,MAAAlC,KAAA,aAAAG,IAAA4K,GACAnL,EAAAsC,MAAAG,QAAA,YAGAzC,EAAA,kBAAA+C,GAAA,eAAA,kCAAA,WACA,GAAA7C,GAAAF,EAAAsC,MAAAc,QAAA,wBACA8H,EAAAlL,EAAAsC,MAAA/B,MACA4K,EAAAF,EAAAC,EAEAhL,GAAAE,KAAA,aAAAG,IAAA4K,GACAjL,EAAAuC,QAAA,aAeAkB,QC/BA,SAAA3D,GAmBA,QAAAiL,GAAAC,GACA,GAAAxD,EAGAA,GADAwD,EAAA9B,QAAA,UAAA,EACA,6BAEA,qBAGA,IAAArC,GAAAW,EAAAC,KAAAuD,EAEA,OAAAnE,GAAA,GA5BA/G,EAAA,kBAAA+C,GAAA,OAAA,0BAAA,WACA,GAAAmI,GAAAlL,EAAAsC,MAAAlC,KAAA,cAAAG,MACA4K,EAAAF,EAAAC,EAEAlL,GAAAsC,MAAAlC,KAAA,aAAAG,IAAA4K,GACAnL,EAAAsC,MAAAG,QAAA,YAGAzC,EAAA,kBAAA+C,GAAA,eAAA,qCAAA,WACA,GAAA7C,GAAAF,EAAAsC,MAAAc,QAAA,2BACA8H,EAAAlL,EAAAsC,MAAA/B,MACA4K,EAAAF,EAAAC,EAEAhL,GAAAE,KAAA,aAAAG,IAAA4K,GACAjL,EAAAuC,QAAA,aAgBAkB","file":"admins.min.js","sourcesContent":["(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-bargraph\", function() {\n    var block = $(this);\n    var spacing = Math.floor($(this).find(\".spacing\").val()*100) + \"%\";\n    $(this).find(\".spacing-output\").text(spacing);\n\n    loadData(block);\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-bargraph .spacing\", function() {\n    var block = $(this).closest(\".snowball-block-bargraph\");\n    var spacing = Math.floor($(this).val()*100) + \"%\";\n\n    block.find(\".spacing-output\").text(spacing);\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block-bargraph\", function() {\n    var block = $(this);\n    var iframe = block.find(\".snowball-preview\");\n    var map = iframe.contents().find(\".chart\");\n    var draw = iframe[0].contentWindow.drawBargraph;\n\n    if (map && draw) {\n      draw(iframe.contents().find(\".snowball-block-bargraph\"));\n    }\n  });\n\n  function loadData(block) {\n    var container = block.find(\".table\").get(0);\n    var json = block.find(\"[data-target='json']\").val();\n\n    if (json) {\n      var data = JSON.parse(json);\n      initTable(block, container, data);\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/bargraph/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        initTable(block, container, data);\n      });\n    }\n  }\n\n  function reloadData(block) {\n    var container = block.find(\".table\").get(0);\n    var hot = block.data(\"hot\");\n    var json = block.find(\"[data-target='json']\").val();\n    var colHeaders = [\"label\", \"value\"];\n\n    if (json) {\n      var data = JSON.parse(json);\n      hot.updateSettings({\n        colHeaders: colHeaders\n      });\n      hot.loadData(data);\n      hot.render();\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/bargraph/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        hot.updateSettings({\n          colHeaders: colHeaders,\n        });\n        hot.loadData(data);\n        hot.render();\n      });\n    }\n  }\n\n  function initTable(block, container, data) {\n    var colHeaders = [\"Label\", \"Values\"];\n    var columns = [{data: \"label\", type: \"text\"}, {data: \"value\", type: \"numeric\"}];\n\n    var hot = new Handsontable(container, {\n      data: data,\n      rowHeaders: false,\n      fixedRowsTop: 0,\n      colHeaders: colHeaders,\n      columns: columns,\n      columnSorting: false,\n      manualColumnMove: false,\n      manualColumnResize: false,\n      contextMenu: true,\n      multiSelect: true,\n      persistantState: true,\n      fillHandle: true,\n      observeChanges: true,\n      search: true,\n      undo: true,\n      readOnly: false,\n      stretchH: \"all\",\n      afterChange: function(changes, source) {\n        var data = this.getData();\n        refreshOnChange(block, data);\n        if (source !== \"loadData\") {\n          block.trigger(\"render\");\n        }\n      },\n      afterLoadData: function() {\n        var data = this.getData();\n        refreshOnChange(block, data);\n      },\n      afterInit: function() {\n        block.trigger(\"render\");\n      }\n    });\n\n    block.data(\"hot\", hot);\n  }\n\n  function refreshOnChange(block, data, source) {\n    var generatedJSON = data;\n    var jsonString = JSON.stringify(generatedJSON);\n\n    block.find(\"[data-target='json']\").val(jsonString);\n  }\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-choropleth\", function() {\n    var block = $(this);\n    var quantize = block.find(\"[data-target='quantize']\").val();\n\n    $(this).find(\".quantize-output\").text(quantize);\n\n    loadData(block);\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block-choropleth\", function() {\n    var block = $(this);\n    var iframe = block.find(\".snowball-preview\");\n    var map = iframe.contents().find(\".map\");\n    var draw = iframe[0].contentWindow.drawMap;\n\n    if (map && draw) {\n      draw(iframe.contents().find(\".snowball-block-choropleth\"));\n    }\n  });\n\n  $(\"#snowball-main\").on(\"change\", \".snowball-block-choropleth [data-target='map-type']\", function() {\n    var block = $(this).closest(\".snowball-block-choropleth\");\n    var mapType = $(this).val();\n\n    reloadData(block, mapType);\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-choropleth [data-target='quantize']\", function() {\n    var block = $(this).closest(\".snowball-block-choropleth\");\n    var hot = block.data(\"hot\");\n    var quantize = $(this).val();\n\n    block.find(\".quantize-output\").text(quantize);\n  });\n\n  function loadData(block) {\n    var container = block.find(\".table\").get(0);\n    var mapType = block.find(\"[data-target='map-type']\").val();\n    var json;\n\n    if (mapType === \"usa\") {\n      json = block.find(\"[data-target='json-usa']\").val();\n    } else {\n      json = block.find(\"[data-target='json-world']\").val();\n    }\n\n    if (json) {\n      var data = JSON.parse(json);\n      initTable(block, container, data, mapType); \n    } else {\n      var url = snowball.pluginsUrl + \"/modules/choropleth/precipitation-\" + mapType + \".json\";\n\n      $.getJSON(url, function(data) {\n        initTable(block, container, data, mapType);\n      });\n    }\n  }\n\n  function reloadData(block, mapType) {\n    var container = block.find(\".table\").get(0);\n    var hot = block.data(\"hot\");\n    var colHeaders;\n    var json;\n\n    if (mapType === \"usa\") {\n      json = block.find(\"[data-target='json-usa']\").val();\n      colHeaders = [\"fips\", \"State\", \"Value\"];\n    } else {\n      json = block.find(\"[data-target='json-world']\").val();\n      colHeaders = [\"fips\", \"Country\", \"Value\"];\n    }\n\n    if (json) {\n      var data = JSON.parse(json);\n      hot.updateSettings({\n        colHeaders: colHeaders\n      });\n      hot.loadData(data);\n      hot.render();\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/choropleth/precipitation-\" + mapType + \".json\";\n\n      $.getJSON(url, function(data) {\n        hot.updateSettings({\n          colHeaders: colHeaders,\n        });\n        hot.loadData(data);\n        hot.render();\n      });\n    }\n  }\n\n  function initTable(block, container, data, mapType) {\n    var colHeaders = [\"fips\", \"Country\", \"Value\"];\n\n    if (mapType === \"usa\") {\n      colHeaders = [\"fips\", \"State\", \"Value\"];\n    }\n\n    var hot = new Handsontable(container, {\n      data: data,\n      rowHeaders: false,\n      fixedRowsTop: 0,\n      colHeaders: colHeaders,\n      columns: [{data: \"fips\", readOnly: true}, {data: \"State\", readOnly: true}, {data: \"Value\"}],\n      columnSorting: false,\n      manualColumnMove: false,\n      manualColumnResize: false,\n      contextMenu: true,\n      multiSelect: true,\n      persistantState: true,\n      fillHandle: true,\n      observeChanges: true,\n      search: true,\n      undo: true,\n      readOnly: false,\n      stretchH: \"all\",\n      afterChange: function(changes, source) {\n        var data = this.getData();\n        refreshOnChange(block, data);\n        if (source !== \"loadData\") {\n          block.trigger(\"render\");\n        }\n      },\n      afterLoadData: function() {\n        var data = this.getData();\n        refreshOnChange(block, data);\n      },\n      afterInit: function() {\n        block.trigger(\"render\");\n      }\n    });\n\n    block.data(\"hot\", hot);\n  }\n\n  function refreshOnChange(block, data, source) {\n    var generatedJSON = data;\n    var jsonString = JSON.stringify(generatedJSON);\n    var mapType = block.find(\"[data-target='map-type']\").val();\n\n    block.find(\"[data-target='json-\" + mapType + \"']\").val(jsonString);\n  }\n\n})(jQuery);\n","(function ($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-columns\", function() {\n    var block = $(this);\n\n    block.find('input[type=\"checkbox\"]').each(function(index) {\n      if ($(this).prop(\"checked\")) {\n        var textarea = block.find(\".column-textarea\").eq(index);\n        initializeEditorAt(textarea);\n        block.find(\".toggle-button\").eq(index).addClass(\"show\");\n      }\n    });\n\n    block.find(\".CodeMirror\").hide().eq(0).show();\n    block.find(\".toggle-button\").eq(0).addClass(\"active\");\n\n    var activeEditors = block.find(\".show\").length;\n    if (activeEditors == 4) {\n      block.find(\".add-button\").hide();\n    }\n  });\n\n  function initializeEditorAt(textarea) {\n    var editor = CodeMirror.fromTextArea(textarea[0], {\n      mode: \"htmlmixed\",\n      lineNumbers: true,\n      lineWrapping: true,\n      indentUnit: 2,\n      tabSize: 2,\n      theme: \"monokai\"\n    });\n\n    editor.setSize(\"100%\", \"100%\");\n\n    editor.on(\"change\", function() {\n      editor.save();\n      textarea.trigger(\"change\");\n    });\n\n    textarea.data(\"codeMirrorInstance\", editor);\n  }\n\n  $(\"#snowball-main\").on(\"click\", \".snowball-block-columns .toggle-button\", function(event) {\n    var block = $(this).closest(\".snowball-block-columns\");\n    var selectedIndex = block.find(\".toggle-buttons .toggle-button\").index($(this));\n\n    activateSelectedButton(block, selectedIndex);\n    activateSelectedEditor(block, selectedIndex);\n  });\n\n  $(\"#snowball-main\").on(\"click\", \".snowball-block-columns .add-button\", function(event) {\n    var block= $(this).closest(\".snowball-block-columns\");\n\n    var activeEditors = block.find(\".show\").length;\n    if (activeEditors == 3) {\n      block.find(\".add-button\").fadeOut(500);\n    }\n\n    block.find( '[type=\"checkbox\"]' ).each(function(index) {\n      if (!($(this).prop(\"checked\"))) {\n        addNewColumn(block, index);\n        return false;\n      }\n    });\n    block.trigger(\"render\");\n  });\n\n  function addNewColumn(block, selection) {\n    block.find(\".toggle-button\").eq(selection).addClass(\"show\");\n\n    var textarea = block.find(\".column-textarea\").eq(selection);\n    initializeEditorAt(textarea);\n\n    block.find(\".toggle-buttons .toggle-button\").each(function(index) {\n      if (index === selection) {\n        $(this).addClass(\"active\");\n      } else {\n        $(this).removeClass(\"active\");\n      }\n    });\n\n    block.find(\".CodeMirror\").each(function(index) {\n      if (index === selection) {\n        $(this).show();\n      } else {\n        $(this).hide();\n      }\n    });\n\n    var checkbox = block.find('[type=\"checkbox\"]').eq(selection);\n    checkbox.prop(\"checked\", true);\n  }\n\n  $(\"#snowball-main\").on(\"click\", \".snowball-block-columns .delete-column\", function(event) {\n    event.stopPropagation();\n\n    if (confirm(\"Are you sure you want to delete this column?\")) {\n      var block = $(this).closest(\".snowball-block-columns\");\n      var button = $(this).closest(\".toggle-button\");\n      var selectedIndex = block.find(\".toggle-buttons .toggle-button\").index(button);\n      var activeEditors = block.find(\".show\").length;\n      var textarea;\n      var codeMirrorInstance;\n      var checkbox;\n\n      if (selectedIndex == (activeEditors - 1)) {\n        textarea = block.find(\".column-textarea\").eq(selectedIndex);\n        codeMirrorInstance = textarea.data(\"codeMirrorInstance\");\n\n        checkbox = block.find( '[type=\"checkbox\"]' ).eq(selectedIndex);\n        checkbox.prop(\"checked\", false);\n\n        codeMirrorInstance.toTextArea();\n        textarea.val(\"\");\n\n        block.find(\".show\").eq(selectedIndex).removeClass(\"show\");\n\n        activateSelectedButton(block, (selectedIndex - 1));\n        activateSelectedEditor(block, (selectedIndex - 1));\n\n        block.find(\".CodeMirror\").eq((selectedIndex - 1)).show();\n      } else {\n        while (selectedIndex < (activeEditors - 1)){\n          textarea = block.find(\".column-textarea\").eq(selectedIndex);\n          codeMirrorInstance = textarea.data(\"codeMirrorInstance\");\n\n          codeMirrorInstance.toTextArea();\n\n          checkbox = block.find( '[type=\"checkbox\"]' ).eq((selectedIndex));\n          checkbox.prop(\"checked\", true);\n\n          var temp_textarea = block.find(\".column-textarea\").eq((selectedIndex + 1));\n          var temp_codeMirrorInstance = temp_textarea.data(\"codeMirrorInstance\");\n\n          temp_codeMirrorInstance.toTextArea();\n\n          var temp_checkbox = block.find( '[type=\"checkbox\"]' ).eq((selectedIndex + 1));\n          temp_checkbox.prop(\"checked\", false);\n\n          textarea.val((temp_textarea.val()));\n          initializeEditorAt(textarea);\n\n          if (selectedIndex == (activeEditors - 2)) {\n            block.find(\".show\").eq((selectedIndex + 1)).removeClass(\"show\");\n            activeEditors = block.find(\".show\").length;\n\n            block.find(\".column-textarea\").eq((selectedIndex + 1)).val(\"\");\n          }\n\n          selectedIndex = selectedIndex + 1;\n        }\n      }\n\n      block.trigger(\"render\");\n      activateSelectedButton(block, (selectedIndex - 1));\n    }\n\n    $(this).closest(\".snowball-block-columns\").find(\".add-button\").fadeIn(500);\n  });\n\n  function activateSelectedButton(block, selection) {\n    block.find(\".show\").each(function(index) {\n      if (index === selection) {\n        $(this).addClass(\"active\");\n      } else {\n        $(this).removeClass(\"active\");\n      }\n    });\n  }\n\n  function activateSelectedEditor(block, selection) {\n    block.find(\".CodeMirror\").each(function(index) {\n      if (index === selection) {\n        $(this).show();\n      } else {\n        $(this).hide();\n      }\n    });\n  }\n})(jQuery);","(function($) {\n\n  $(document).ready(function() {\n    updateContents();\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block\", function() {\n\n    if ($(this).hasClass(\"snowball-block-contents\")) {\n      return;\n    }\n\n    updateContents();\n  });\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-contents\", function() {\n    updateContents($(this));\n  });\n\n  function updateContents(block) {\n    var html = buildContents();\n\n    if (typeof block == \"undefined\") {\n      $(\".snowball-block-contents\").each(function() {\n        var block = $(this);\n        $(this).find(\".html\").val(html);\n        block.trigger(\"render\");\n      });\n    } else {\n      block.find(\".html\").val(html);\n      block.trigger(\"render\");\n    }\n  }\n\n  function buildContents() {\n    var contents = [];\n    var html = \"<ul>\";\n\n    $(\".snowball-block\").each(function() {\n      var title = $(this).find(\".snowball-title\").text();\n      var match = \"[id]\";\n      var matches = $(this).find(\".snowball-preview\").contents().find(match);\n\n      if (title !== \"Contents\") {\n        matches.each(function() {\n          var elem = {\n            id: $(this).attr(\"id\"),\n            text: $(this).text()\n          };\n\n          contents.push(elem);\n        });\n      }\n    });\n\n    contents.forEach(function(elem, index) {\n      var content = \"<li><a href='#\" + elem.id + \"'>\" + elem.text + \"</a></li>\";\n      html = html + content; \n    });\n\n    html = html + \"</ul>\";\n\n    return html;\n  }\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-googlemaps\", function() {\n    var zoom = $(this).find(\".zoom\").val();\n    $(this).find(\".zoom-output\").text(zoom);\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-googlemaps .map-user\", function() {\n    var block = $(this).closest(\".snowball-block-googlemaps\");\n    var url = $(this).val();\n    var props = mapParse(url);\n\n    block.find(\"[data-target='lat']\").val(props.lat);\n    block.find(\"[data-target='lon']\").val(props.lon);\n    block.find(\"[data-target='zoom']\").val(props.zoom);\n    block.find(\".zoom-output\").text(props.zoom);\n    block.find(\"[data-target='maptype'][value='\" + props.maptype +  \"']\").prop(\"checked\", true);\n\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-googlemaps .zoom\", function() {\n    var block = $(this).closest(\".snowball-block-googlemaps\");\n    var zoom = $(this).val();\n\n    block.find(\".zoom-output\").text(zoom);\n  });\n\n  function mapParse(url) {\n    var re = /google.com\\/maps\\/.*@(-?\\d+.\\d+),(-?\\d+.\\d+),(\\d+)([mz])/;\n    var matches = re.exec(url);\n\n    if (matches !== null) {\n      var zoom = matches[3];\n      var maptype = matches[4];\n      var size = \"600x400\";\n\n      if (maptype === \"m\") {\n        maptype = \"satellite\";\n        zoom = mToZ(zoom);\n      } else {\n        maptype = \"roadmap\";\n      }\n\n      return {\n        \"lat\": matches[1],\n        \"lon\": matches[2],\n        \"maptype\": maptype,\n        \"zoom\": zoom,\n        \"size\": size\n      };\n    }\n  }\n\n  function mToZ(m) {\n    var c = 56819712;\n    var z = c / parseInt(m, 10);\n\n    z = Math.round(1 + (Math.log(z) / Math.LN2));\n\n    return z;\n  }\n\n})(jQuery);\n","(function($) {\n\n    $(\"#snowball-main\").on(\"open\", \".snowball-block-html\", function() {\n\n      var block = $(this);\n      var textarea = block.find(\"textarea\");\n\n      var editor = CodeMirror.fromTextArea(textarea[0], {\n        mode: \"htmlmixed\",\n        lineNumbers: true,\n        lineWrapping: true,\n        indentUnit: 2,\n        tabSize: 2,\n        theme: \"monokai\"\n      });\n\n      editor.setSize(\"100%\", \"100%\");\n\n      editor.on(\"change\", function() {\n        editor.save();\n        textarea.trigger(\"change\");\n      });\n    });\n\n})(jQuery);\n","(function($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-image\", function() {\n    var borderradius = $(this).find(\".img-border-radius\").val() + \"%\";\n    $(this).find(\".img-border-radius-output\").text(borderradius);\n  });\n\n  $(document).ready(function() {\n    var index;\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-image .upload-image-button\", function() {\n      var block = $(this).closest(\".snowball-block\");\n      index = $(\".snowball-block\").index(block);\n      tb_show(\"\", \"media-upload.php?type=image&TB_iframe=true\");\n\n      window.original_send_to_editor = window.send_to_editor;\n      window.send_to_editor = function(html){\n        var block = $(\".snowball-block\").eq(index);\n        imgurl = $(\"img\", html).attr(\"src\");\n        block.find(\".upload-image\").val(imgurl).trigger(\"change\");\n        tb_remove();\n        window.send_to_editor = window.original_send_to_editor;\n      };\n\n      return false;\n    });\n\n    $(\"#snowball-main\").on(\"input change\", \".snowball-block-image .img-border-radius\", function() {\n      var block = $(this).closest(\".snowball-block-image\");\n      var borderradius = $(this).val() + \"%\";\n\n      block.find(\".img-border-radius-output\").text(borderradius);\n      block.trigger(\"render\");\n    });\n  });\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-imageslider\", function() {\n    var borderradius = $(this).find(\".img-border-radius\").val() + \"%\";\n    $(this).find(\".img-border-radius-output\").text(borderradius);\n  });\n\n  $(document).ready(function() {\n    var blockIndex;\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-imageslider .upload-image-button\", function() {\n      var block = $(this).closest(\".snowball-block\");\n      blockIndex = $(\".snowball-block\").index(block);\n      var index = block.find(\".upload-image-button\").index($(this));\n      tb_show(\"\", \"media-upload.php?type=image&TB_iframe=true\");\n\n      window.original_send_to_editor = window.send_to_editor;\n      window.send_to_editor = function(html){\n        var block = $(\".snowball-block\").eq(blockIndex);\n        imgurl = $(\"img\", html).attr(\"src\");\n        block.find(\".upload-image\").eq(index).val(imgurl).trigger(\"change\");\n        tb_remove();\n        window.send_to_editor = window.original_send_to_editor;\n      };\n\n      return false;\n    });\n  });\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-scatterplot\", function() {\n    var block = $(this);\n    var size = $(this).find(\".size\").val() + \"px\";\n    $(this).find(\".size-output\").text(size);\n\n    loadData(block);\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-scatterplot .size\", function() {\n    var block = $(this).closest(\".snowball-block-scatterplot\");\n    var size = $(this).val() + \"px\";\n\n    block.find(\".size-output\").text(size);\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block-scatterplot\", function() {\n    var block = $(this);\n    var iframe = block.find(\".snowball-preview\");\n    var map = iframe.contents().find(\".chart\");\n    var draw = iframe[0].contentWindow.drawScatterplot;\n\n    if (map && draw) {\n      draw(iframe.contents().find(\".snowball-block-scatterplot\"));\n    }\n  });\n\n  function loadData(block) {\n    var container = block.find(\".table\").get(0);\n    var json = block.find(\"[data-target='json']\").val();\n\n    if (json) {\n      var data = JSON.parse(json);\n      initTable(block, container, data); \n    } else {\n      var url = snowball.pluginsUrl + \"/modules/scatterplot/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        initTable(block, container, data);\n      });\n    }\n  }\n\n  function reloadData(block) {\n    var container = block.find(\".table\").get(0);\n    var hot = block.data(\"hot\");\n    var json = block.find(\"[data-target='json']\").val();\n    var colHeaders = [\"Label\", \"X\", \"Y\"];\n\n    if (json) {\n      var data = JSON.parse(json);\n      hot.updateSettings({\n        colHeaders: colHeaders\n      });\n      hot.loadData(data);\n      hot.render();\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/choropleth/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        hot.updateSettings({\n          colHeaders: colHeaders,\n        });\n        hot.loadData(data);\n        hot.render();\n      });\n    }\n  }\n\n  function initTable(block, container, data) {\n    var colHeaders = [\"Label\", \"X\", \"Y\"];\n    var columns = [{data: \"Label\", type: \"text\"}, {data: \"X\", type: \"numeric\"}, {data: \"Y\", type: \"numeric\"}];\n\n    var hot = new Handsontable(container, {\n      data: data,\n      rowHeaders: false,\n      fixedRowsTop: 0,\n      colHeaders: colHeaders,\n      columns: columns,\n      columnSorting: false,\n      manualColumnMove: false,\n      manualColumnResize: false,\n      contextMenu: true,\n      multiSelect: true,\n      persistantState: true,\n      fillHandle: true,\n      observeChanges: true,\n      search: true,\n      undo: true,\n      readOnly: false,\n      stretchH: \"all\",\n      afterChange: function(changes, source) {\n        var data = this.getData();\n        refreshOnChange(block, data);\n        if (source !== \"loadData\") {\n          block.trigger(\"render\");\n        }\n      },\n      afterLoadData: function() {\n        var data = this.getData();\n        refreshOnChange(block, data);\n      },\n      afterInit: function() {\n        block.trigger(\"render\");\n      }\n    });\n\n    block.data(\"hot\", hot);\n  }\n\n  function refreshOnChange(block, data, source) {\n    var generatedJSON = data;\n    var jsonString = JSON.stringify(generatedJSON);\n\n    block.find(\"[data-target='json']\").val(jsonString);\n  }\n\n})(jQuery);\n","(function($) {\n  function getTrackId(url) {\n    var re;\n\n    if (url && url.indexOf(\"api.soundcloud.com/tracks\") >= 0) {\n      re = /api.soundcloud.com\\/tracks\\/(\\d+&)/;\n      var matches = re.exec(url);\n      if (matches[1]) {\n        return matches[1];\n      }\n    }\n\n    return \"\";\n  }\n\n  function getSoundCloudUrl(id, options) {\n    var soundCloudUrl = \"https://w.soundcloud.com/player/?url=https://api.soundcloud.com/tracks/\";\n    soundCloudUrl = soundCloudUrl + id + \"&show_reposts=false&auto_play=false\"\n    for (var key in options) {\n      if (options.hasOwnProperty(key)) {\n        soundCloudUrl = soundCloudUrl + \"&\" + key + \"=\" + options[key];\n      }\n    }\n    return soundCloudUrl;\n  }\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-soundcloud\", function() {\n    var block = $(this).closest(\".snowball-block-soundcloud\");\n    var soundCloudLink = $(block).find(\"input[data-target=embed-link]\").val();\n    var embedIframe = $(block)\n                        .find(\".snowball-preview\").contents()\n                        .find(\".embed-iframe\");\n    var show_user = $(block).find(\"input[data-target=show-user]\").prop(\"checked\");\n    var show_comments = $(block).find(\"input[data-target=show-comments]\").prop(\"checked\");\n    var visual = $(block).find(\"input[data-target=visual]\").prop(\"checked\");\n    var soundcloud_options = {\n      \"show_user\": show_user,\n      \"show_comments\": show_comments,\n      \"visual\": visual\n    };\n    var trackId = getTrackId(soundCloudLink);\n    var trackUrl = getSoundCloudUrl(trackId, soundcloud_options);\n    $(block).find(\".track-url\").val(trackUrl);\n\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-soundcloud\", function() {\n    var block = $(this).closest(\".snowball-block-soundcloud\");\n    var soundCloudLink = $(block).find(\"input[data-target=embed-link]\").val();\n    var embedIframe = $(block)\n                        .find(\".snowball-preview\").contents()\n                        .find(\".embed-iframe\");\n    var show_user = $(block).find(\"input[data-target=show-user]\").prop(\"checked\");\n    var show_comments = $(block).find(\"input[data-target=show-comments]\").prop(\"checked\");\n    var visual = $(block).find(\"input[data-target=visual]\").prop(\"checked\");\n    var soundcloud_options = {\n      \"show_user\": show_user,\n      \"show_comments\": show_comments,\n      \"visual\": visual\n    };\n    var trackId = getTrackId(soundCloudLink);\n    var trackUrl = getSoundCloudUrl(trackId, soundcloud_options);\n\n    $(block).find(\".track-url\").val(trackUrl);\n    block.trigger(\"render\");\n  });\n})(jQuery);\n","(function($) {\n\n  var counter = 0;\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-splash\", function() {\n    var textarea = $(this).find(\"textarea\");\n    var id = \"snowball-block-splash-textarea-\" + counter;\n    textarea.attr(\"id\", id);\n    counter++;\n\n    quicktags({\n      id : id,\n      buttons: \"strong,em,link,blockquote,del,code,close\"\n    });\n\n    QTags._buttonsInit();\n  });\n\n  $(\"#snowball-main\").on(\"click\", \".snowball-block-splash .quicktags-toolbar .button\", function() {\n    $(this).closest(\".snowball-block\").trigger(\"render\");\n  });\n\n  $(document).ready(function() {\n    var index;\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-splash .upload-image-button\", function() {\n      var block = $(this).closest(\".snowball-block\");\n      index = $(\".snowball-block\").index(block);\n      tb_show(\"\", \"media-upload.php?type=image&TB_iframe=true\");\n\n      window.original_send_to_editor = window.send_to_editor;\n      window.send_to_editor = function(html){\n        var block = $(\".snowball-block\").eq(index);\n        imgurl = $(\"img\", html).attr(\"src\");\n        block.find(\".upload-image\").val(imgurl).trigger(\"change\");\n        tb_remove();\n        window.send_to_editor = window.original_send_to_editor;\n      };\n\n      return false;\n    });\n  });\n\n})(jQuery);\n","(function($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-table\", function() {\n      var block = $(this);\n      var container = block.find(\".table\").get(0);\n      var data = JSON.parse(block.find(\"[data-target='JSON']\").val());\n\n      var hot = new Handsontable(container, {\n        data: data,\n        rowHeaders: false,\n        fixedRowsTop: 1,\n        colHeaders: true,\n        columnSorting: false,\n        manualColumnMove: false,\n        manualColumnResize: false,\n        contextMenu: true,\n        multiSelect: true,\n        persistantState: true,\n        fillHandle: true,\n        observeChanges: true,\n        search: true,\n        undo: true,\n        readOnly: false,\n        stretchH: \"all\",\n        afterInit: function(e) {\n          refreshOnChange(block, data);\n          block.trigger(\"render\");\n        },\n        afterChange: function (e) {\n          refreshOnChange(block, data);\n        },\n        afterCreateRow: function (e) {\n          refreshOnChange(block, data);\n          block.trigger(\"render\");\n        },\n        afterCreateCol: function (e) {\n          refreshOnChange(block, data);\n          block.trigger(\"render\");\n        },\n        afterRemoveRow: function (e) {\n          refreshOnChange(block, data);\n          block.trigger(\"render\");\n        },\n        afterRemoveCol: function (e) {\n          refreshOnChange(block, data);\n          block.trigger(\"render\");\n        }\n      });\n    });\n\n    function refreshOnChange(block, data) {\n      var jsonString = JSON.stringify(data);\n\n      block.find(\"[data-target='JSON']\").val(jsonString);\n      block.find(\"[data-target='HTML']\").val(createTable(data));\n    }\n\n    function createTable(JSON) {\n      var HTML = \"  <table>\\n\";\n      var numRows = JSON.length;\n\n      for (var i = 0; i < numRows; i++) {\n        if (i === 0) {\n          HTML = HTML + \"    <thead>\\n\";\n        } else if (i === 1) {\n          HTML = HTML + \"    </thead>\\n    <tbody>\\n\";\n        }\n        HTML = HTML + \"      <tr>\\n\";\n        for (var j = 0; j < JSON[i].length; j++) {\n          if (JSON[i][j] === null) {\n            JSON[i][j] = \"\";\n          }\n\n          if (i === 0) {\n            HTML = HTML + \"        <th>\" + JSON[i][j] + \"</th>\\n\";\n          } else {\n            HTML = HTML + \"        <td>\" + JSON[i][j] + \"</td>\\n\";\n          }\n        }\n\n        HTML = HTML + \"      </tr>\\n\";\n      }\n\n      HTML = HTML + \"    </tbody>\\n  </table>\";\n\n      return HTML;\n    }\n\n})(jQuery);","(function($) {\n    var counter = 0;\n    QTags.addButton(\"eg_hr\", \"hr\", \"<hr />\", \"\", \"h\", \"Horizontal rule line\", 70);\n\n    $(\"#snowball-main\").on(\"open\", \".snowball-block-text\", function() {\n      var textarea = $(this).find(\"textarea\");\n      var id = \"snowball-block-text-textarea-\" + counter;\n      textarea.attr(\"id\", id);\n      counter++;\n\n      quicktags({\n        id : id,\n        buttons: \"strong,em,link,blockquote,del,code,ul,ol,li,code,close\"\n      });\n\n      QTags._buttonsInit();\n    });\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-text .quicktags-toolbar .button\", function() {\n      $(this).closest(\".snowball-block\").trigger(\"render\");\n    });\n\n})(jQuery);\n","(function($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-vimeo\", function() {\n    var videoUrl = $(this).find(\".video-url\").val();\n    var videoID = parseVideoURL(videoUrl);\n\n    $(this).find(\".video-id\").val(videoID);\n    $(this).trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-vimeo .video-url\", function() {\n    var block = $(this).closest(\".snowball-block-vimeo\");\n    var videoUrl = $(this).val();\n    var videoID = parseVideoURL(videoUrl);\n\n    block.find(\".video-id\").val(videoID);\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-vimeo [data-target='control-color-input']\", function() {\n    var block = $(this).closest(\".snowball-block-vimeo\");\n    var inputColor = $(this).val();\n    var outputColor = \"&color=\" + inputColor.substring(1);\n    $(\"[data-target='control-color-output']\").val(outputColor);\n  });\n\n  function parseVideoURL(videoUrl) {\n    var re;\n\n    if (videoUrl.indexOf(\"video\") >= 0) {\n      re = /vimeo.com.*video\\/(\\S*)\"/;\n    } else {\n      re = /vimeo.com\\/(.*)/;\n    }\n\n    var matches = re.exec(videoUrl);\n\n    return matches[1];\n  }\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-vine\", function() {\n    var videoUrl = $(this).find(\".video-url\").val();\n    var videoID = parseVideoURL(videoUrl);\n\n    $(this).find(\".video-id\").val(videoID);\n    $(this).trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-vine .video-url\", function() {\n    var block = $(this).closest(\".snowball-block-vine\");\n    var videoUrl = $(this).val();\n    var videoID = parseVideoURL(videoUrl);\n\n    block.find(\".video-id\").val(videoID);\n    block.trigger(\"render\");\n  });\n\n  function parseVideoURL(videoUrl) {\n    var re;\n\n    if (videoUrl.indexOf(\"embed\") >= 0) {\n      re = /vine.co\\/v\\/(.*)\\/embed/;\n    } else {\n      re = /vine.co\\/v\\/(.*)/;\n    }\n\n    var matches = re.exec(videoUrl);\n    return matches[1];\n  }\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-youtube\", function() {\n    var videoUrl = $(this).find(\".video-url\").val();\n    var videoID = parseVideoURL(videoUrl);\n\n    $(this).find(\".video-id\").val(videoID);\n    $(this).trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-youtube .video-url\", function() {\n    var block = $(this).closest(\".snowball-block-youtube\");\n    var videoUrl = $(this).val();\n    var videoID = parseVideoURL(videoUrl);\n\n    block.find(\".video-id\").val(videoID);\n    block.trigger(\"render\");\n  });\n\n  function parseVideoURL(videoUrl) {\n    var re;\n\n    if (videoUrl.indexOf(\"embed\") >= 0) {\n      re = /youtube.com.*embed\\/(\\S*)\"/;\n    } else {\n      re = /youtube.com.*v=(.*)/;\n    }\n\n    var matches = re.exec(videoUrl);\n\n    return matches[1];\n  }\n})(jQuery);\n"],"sourceRoot":"/source/"}