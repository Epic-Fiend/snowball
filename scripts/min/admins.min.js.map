{"version":3,"sources":["choropleth/admin.js","googlemaps/admin.js","html/admin.js","image/admin.js","splash/admin.js","table/admin.js","text/admin.js","youtube/admin.js"],"names":["$","loadData","block","json","container","find","get","mapType","val","data","JSON","parse","initTable","url","snowball","pluginsUrl","getJSON","reloadData","colHeaders","hot","updateSettings","render","Handsontable","rowHeaders","fixedRowsTop","columns","readOnly","columnSorting","manualColumnMove","manualColumnResize","contextMenu","multiSelect","persistantState","fillHandle","observeChanges","search","undo","stretchH","afterChange","changes","source","this","getData","refreshOnChange","trigger","afterLoadData","afterInit","generatedJSON","jsonString","stringify","on","quantize","text","iframe","map","contents","draw","contentWindow","drawMap","closest","jQuery","mapParse","re","matches","exec","zoom","maptype","size","mToZ","lat","lon","m","c","z","parseInt","Math","round","log","LN2","props","prop","textarea","window","editor","CodeMirror","fromTextArea","mode","name","htmlMode","lineNumbers","lineWrapping","indentUnit","tabSize","theme","setSize","save","borderradius","document","ready","index","tb_show","original_send_to_editor","send_to_editor","html","eq","imgurl","attr","tb_remove","counter","id","quicktags","buttons","QTags","_buttonsInit","createTable","HTML","numRows","length","i","j","e","afterCreateRow","afterCreateCol","afterRemoveRow","afterRemoveCol","addButton","parseVideoURL","videoUrl","indexOf","videoID"],"mappings":"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","file":"admins.min.js","sourcesContent":["(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-choropleth\", function() {\n    var block = $(this);\n    var quantize = block.find(\"[data-target='quantize']\").val();\n\n    $(this).find(\".quantize-output\").text(quantize);\n\n    loadData(block);\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block-choropleth\", function() {\n    var block = $(this);\n    var iframe = block.find(\".snowball-preview\");\n    var map = iframe.contents().find(\".map\");\n    var draw = iframe[0].contentWindow.drawMap;\n\n    if (map && draw) {\n      draw(iframe.contents().find(\".snowball-block-choropleth\"));\n    }\n  });\n\n  $(\"#snowball-main\").on(\"change\", \".snowball-block-choropleth [data-target='map-type']\", function() {\n    var block = $(this).closest(\".snowball-block-choropleth\");\n    var mapType = $(this).val();\n\n    reloadData(block, mapType);\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-choropleth [data-target='quantize']\", function() {\n    var block = $(this).closest(\".snowball-block-choropleth\");\n    var hot = block.data(\"hot\");\n    var quantize = $(this).val();\n\n    block.find(\".quantize-output\").text(quantize);\n  });\n\n  function loadData(block) {\n    var container = block.find(\".table\").get(0);\n    var mapType = block.find(\"[data-target='map-type']\").val();\n    var json;\n\n    if (mapType === \"usa\") {\n      json = block.find(\"[data-target='json-usa']\").val();\n    } else {\n      json = block.find(\"[data-target='json-world']\").val();\n    }\n\n    if (json) {\n      var data = JSON.parse(json);\n      initTable(block, container, data, mapType); \n    } else {\n      var url = snowball.pluginsUrl + \"/modules/choropleth/precipitation-\" + mapType + \".json\";\n\n      $.getJSON(url, function(data) {\n        initTable(block, container, data, mapType);\n      });\n    }\n  }\n\n  function reloadData(block, mapType) {\n    var container = block.find(\".table\").get(0);\n    var hot = block.data(\"hot\");\n    var colHeaders;\n    var json;\n\n    if (mapType === \"usa\") {\n      json = block.find(\"[data-target='json-usa']\").val();\n      colHeaders = [\"fips\", \"State\", \"Value\"];\n    } else {\n      json = block.find(\"[data-target='json-world']\").val();\n      colHeaders = [\"fips\", \"Country\", \"Value\"];\n    }\n\n    if (json) {\n      var data = JSON.parse(json);\n      hot.updateSettings({\n        colHeaders: colHeaders\n      });\n      hot.loadData(data);\n      hot.render();\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/choropleth/precipitation-\" + mapType + \".json\";\n\n      $.getJSON(url, function(data) {\n        hot.updateSettings({\n          colHeaders: colHeaders,\n        });\n        hot.loadData(data);\n        hot.render();\n      });\n    }\n  }\n\n  function initTable(block, container, data, mapType) {\n    var colHeaders = [\"fips\", \"Country\", \"Value\"];\n\n    if (mapType === \"usa\") {\n      colHeaders = [\"fips\", \"State\", \"Value\"];\n    }\n\n    var hot = new Handsontable(container, {\n      data: data,\n      rowHeaders: false,\n      fixedRowsTop: 0,\n      colHeaders: colHeaders,\n      columns: [{data: \"fips\", readOnly: true}, {data: \"State\", readOnly: true}, {data: \"Value\"}],\n      columnSorting: false,\n      manualColumnMove: false,\n      manualColumnResize: false,\n      contextMenu: true,\n      multiSelect: true,\n      persistantState: true,\n      fillHandle: true,\n      observeChanges: true,\n      search: true,\n      undo: true,\n      readOnly: false,\n      stretchH: \"all\",\n      afterChange: function(changes, source) {\n        var data = this.getData();\n        refreshOnChange(block, data);\n        if (source !== \"loadData\") {\n          block.trigger(\"render\");\n        }\n      },\n      afterLoadData: function() {\n        var data = this.getData();\n        refreshOnChange(block, data);\n      },\n      afterInit: function() {\n        block.trigger(\"render\");\n      }\n    });\n\n    block.data(\"hot\", hot);\n  }\n\n  function refreshOnChange(block, data, source) {\n    var generatedJSON = data;\n    var jsonString = JSON.stringify(generatedJSON);\n    var mapType = block.find(\"[data-target='map-type']\").val();\n\n    block.find(\"[data-target='json-\" + mapType + \"']\").val(jsonString);\n  }\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-googlemaps\", function() {\n    var zoom = $(this).find(\".zoom\").val();\n    $(this).find(\".zoom-output\").text(zoom);\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-googlemaps .map-user\", function() {\n    var block = $(this).closest(\".snowball-block-googlemaps\");\n    var url = $(this).val();\n    var props = mapParse(url);\n\n    block.find(\"[data-target='lat']\").val(props.lat);\n    block.find(\"[data-target='lon']\").val(props.lon);\n    block.find(\"[data-target='zoom']\").val(props.zoom);\n    block.find(\".zoom-output\").text(props.zoom);\n    block.find(\"[data-target='maptype'][value='\" + props.maptype +  \"']\").prop(\"checked\", true);\n\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-googlemaps .zoom\", function() {\n    var block = $(this).closest(\".snowball-block-googlemaps\");\n    var zoom = $(this).val();\n\n    block.find(\".zoom-output\").text(zoom);\n  });\n\n  function mapParse(url) {\n    var re = /google.com\\/maps\\/.*@(-?\\d+.\\d+),(-?\\d+.\\d+),(\\d+)([mz])/;\n    var matches = re.exec(url);\n\n    if (matches !== null) {\n      var zoom = matches[3];\n      var maptype = matches[4];\n      var size = \"600x400\";\n\n      if (maptype === \"m\") {\n        maptype = \"satellite\";\n        zoom = mToZ(zoom);\n      } else {\n        maptype = \"roadmap\";\n      }\n\n      return {\n        \"lat\": matches[1],\n        \"lon\": matches[2],\n        \"maptype\": maptype,\n        \"zoom\": zoom,\n        \"size\": size\n      };\n    }\n  }\n\n  function mToZ(m) {\n    var c = 56819712;\n    var z = c / parseInt(m, 10);\n\n    z = Math.round(1 + (Math.log(z) / Math.LN2));\n\n    return z;\n  }\n\n})(jQuery);\n","(function($) {\n\n    $(\"#snowball-main\").on(\"open\", \".snowball-block-html\", function() {\n\n      var block = $(this);\n      var textarea = block.find(\"textarea\");\n\n      window.editor = CodeMirror.fromTextArea(textarea[0], {\n          mode: {name: \"xml\", htmlMode: true},\n          lineNumbers: true,\n          lineWrapping: true,\n          indentUnit: 2,\n          tabSize: 2,\n          theme: \"monokai\"\n      });\n\n      editor.setSize(\"100%\", \"100%\");\n\n      editor.on(\"change\", function() {\n        editor.save();\n        textarea.trigger(\"change\");\n      });\n    });\n\n})(jQuery);\n","(function($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-image\", function() {\n    var borderradius = $(this).find(\".img-border-radius\").val() + \"%\";\n    $(this).find(\".img-border-radius-output\").text(borderradius);\n  });\n\n  $(document).ready(function() {\n    var index;\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-image .upload-image-button\", function() {\n      var block = $(this).closest(\".snowball-block\");\n      index = $(\".snowball-block\").index(block);\n      tb_show(\"\", \"media-upload.php?type=image&TB_iframe=true\");\n\n      window.original_send_to_editor = window.send_to_editor;\n      window.send_to_editor = function(html){\n        var block = $(\".snowball-block\").eq(index);\n        imgurl = $(\"img\", html).attr(\"src\");\n        block.find(\".upload-image\").val(imgurl).trigger(\"change\");\n        tb_remove();\n        window.send_to_editor = window.original_send_to_editor;\n      };\n\n      return false;\n    });\n\n    $(\"#snowball-main\").on(\"input change\", \".snowball-block-image .img-border-radius\", function() {\n      var block = $(this).closest(\".snowball-block-image\");\n      var borderradius = $(this).val() + \"%\";\n\n      block.find(\".img-border-radius-output\").text(borderradius);\n      block.trigger(\"render\");\n    });\n  });\n\n})(jQuery);\n","(function($) {\n\n  var counter = 0;\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-splash\", function() {\n    var textarea = $(this).find(\"textarea\");\n    var id = \"snowball-block-splash-textarea-\" + counter;\n    textarea.attr(\"id\", id);\n    counter++;\n\n    quicktags({\n      id : id,\n      buttons: \"strong,em,link,blockquote,del,code,close\"\n    });\n\n    QTags._buttonsInit();\n  });\n\n  $(\"#snowball-main\").on(\"click\", \".snowball-block-splash .quicktags-toolbar .button\", function() {\n    $(this).closest(\".snowball-block\").trigger(\"render\");\n  });\n\n  $(document).ready(function() {\n    var index;\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-splash .upload-image-button\", function() {\n      var block = $(this).closest(\".snowball-block\");\n      index = $(\".snowball-block\").index(block);\n      tb_show(\"\", \"media-upload.php?type=image&TB_iframe=true\");\n\n      window.original_send_to_editor = window.send_to_editor;\n      window.send_to_editor = function(html){\n        var block = $(\".snowball-block\").eq(index);\n        imgurl = $(\"img\", html).attr(\"src\");\n        block.find(\".upload-image\").val(imgurl).trigger(\"change\");\n        tb_remove();\n        window.send_to_editor = window.original_send_to_editor;\n      };\n\n      return false;\n    });\n  });\n\n})(jQuery);\n","(function($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-table\", function() {\n      var block = $(this);\n      var container = block.find(\".table\").get(0);\n      var data = JSON.parse(block.find(\"[data-target='JSON']\").val());\n\n      var hot = new Handsontable(container, {\n        data: data,\n        rowHeaders: false,\n        fixedRowsTop: 1,\n        colHeaders: true,\n        columnSorting: false,\n        manualColumnMove: false,\n        manualColumnResize: false,\n        contextMenu: true,\n        multiSelect: true,\n        persistantState: true,\n        fillHandle: true,\n        observeChanges: true,\n        search: true,\n        undo: true,\n        readOnly: false,\n        stretchH: \"all\",\n        afterChange: function (e) {\n          refreshOnChange(block, data);\n        },\n        afterCreateRow: function (e) {\n          refreshOnChange(block, data);\n        },\n        afterCreateCol: function (e) {\n          refreshOnChange(block, data);\n        },\n        afterRemoveRow: function (e) {\n          refreshOnChange(block, data);\n        },\n        afterRemoveCol: function (e) {\n          refreshOnChange(block, data);\n        }\n      });\n    });\n\n    function refreshOnChange(block, data) {\n      var jsonString = JSON.stringify(data);\n\n      block.find(\"[data-target='JSON']\").val(jsonString);\n      block.find(\"[data-target='HTML']\").val(createTable(data));\n\n      block.trigger(\"render\");\n    }\n\n    function createTable(JSON) {\n      var HTML = \"  <table>\\n\";\n      var numRows = JSON.length;\n\n      for (var i = 0; i < numRows; i++) {\n        if (i === 0) {\n          HTML = HTML + \"    <thead>\\n\";\n        } else if (i === 1) {\n          HTML = HTML + \"    </thead>\\n    <tbody>\\n\";\n        }\n        HTML = HTML + \"      <tr>\\n\";\n        for (var j = 0; j < JSON[i].length; j++) {\n          if (JSON[i][j] === null) {\n            JSON[i][j] = \"\";\n          }\n\n          if (i === 0) {\n            HTML = HTML + \"        <th>\" + JSON[i][j] + \"</th>\\n\";\n          } else {\n            HTML = HTML + \"        <td>\" + JSON[i][j] + \"</td>\\n\";\n          }\n        }\n\n        HTML = HTML + \"      </tr>\\n\";\n      }\n\n      HTML = HTML + \"    </tbody>\\n  </table>\";\n\n      return HTML;\n    }\n\n})(jQuery);","(function($) {\n    var counter = 0;\n    QTags.addButton(\"eg_hr\", \"hr\", \"<hr />\", \"\", \"h\", \"Horizontal rule line\", 70);\n\n    $(\"#snowball-main\").on(\"open\", \".snowball-block-text\", function() {\n      var textarea = $(this).find(\"textarea\");\n      var id = \"snowball-block-text-textarea-\" + counter;\n      textarea.attr(\"id\", id);\n      counter++;\n\n      quicktags({\n        id : id,\n        buttons: \"strong,em,link,blockquote,del,code,ul,ol,li,code,close\"\n      });\n\n      QTags._buttonsInit();\n    });\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-text .quicktags-toolbar .button\", function() {\n      $(this).closest(\".snowball-block\").trigger(\"render\");\n    });\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-youtube\", function() {\n    var videoUrl = $(this).find(\".video-url\").val();\n    var videoID = parseVideoURL(videoUrl);\n\n    $(this).find(\".video-id\").val(videoID);\n    $(this).trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-youtube .video-url\", function() {\n    var block = $(this).closest(\".snowball-block-youtube\");\n    var videoUrl = $(this).val();\n    var videoID = parseVideoURL(videoUrl);\n\n    block.find(\".video-id\").val(videoID);\n    block.trigger(\"render\");\n  });\n\n  function parseVideoURL(videoUrl) {\n    var re;\n\n    if (videoUrl.indexOf(\"embed\") >= 0) {\n      re = /youtube.com.*embed\\/(\\S*)\"/;\n    } else {\n      re = /youtube.com.*v=(.*)/;\n    }\n\n    var matches = re.exec(videoUrl);\n\n    return matches[1];\n  }\n})(jQuery);\n"],"sourceRoot":"/source/"}