{"version":3,"sources":["snowball-ajax.js"],"names":["parseBlock","block","type","data","selector","inputs","find","first","blockType","each","index","element","dataTarget","jQuery","attr","inputValue","val","is","customCss","retrieveCustomCss","code","cm","length","html","editor","CodeMirror","readOnlyMark","getAllMarks","getValue","mark","lastReadOnlyLine","lines","fromLine","line","ch","toLine","lastLine","getRange","document","ready","$","retrieveBlocks","blocks","this","push","retrieveRenderedPage","newHTML","contents","remove","click","blocksRetrieved","articleRetrieved","blocks_data","action","post_id","ajax_object","snowball_ajax_nonce","article_data","article","is_preview","post","ajax_url"],"mappings":"AAwEA,QAASA,YAAWC,GAClB,GAAIC,GAAOD,EAAME,KAAK,QAClBC,EAAW,oQACXC,EAASJ,EAAMK,KAAK,yBAAyBC,QAAQD,KAAKF,GAC1DD,IAmBJ,OAjBIE,KACFF,EAAKK,UAAYN,EAEjBG,EAAOI,KAAK,SAASC,EAAOC,GAC1B,GAAIC,GAAaC,OAAOF,GAASG,KAAK,eAClCC,EAAaF,OAAOF,GAASK,KAEG,aAAhCH,OAAOF,GAASG,KAAK,UACvBC,EAAaF,OAAOF,GAASM,GAAG,aAAc,GAAO,GAGvDd,EAAKS,GAAcG,IAGrBZ,EAAKe,UAAYC,kBAAkBlB,IAG9BE,EAKT,QAASgB,mBAAkBlB,GACzB,GACImB,GADAC,EAAKpB,EAAMK,KAAK,6BAGpB,IAAkB,IAAde,EAAGC,OACLF,EAAOnB,EAAMK,KAAK,6BAA6BiB,WAC1C,CACL,GAAIC,GAASH,EAAG,GAAGI,WACfC,EAAeF,EAAOG,aAG1B,IAFAP,EAAOI,EAAOI,WAEVF,EAAaJ,OAAQ,CACvB,GAAIO,GAAOH,EAAa,GACpBI,EAAmBD,EAAKE,MAAMT,MAElC,IAAuB,EAAnBQ,EACFV,EAAOI,EAAOI,eACT,CACL,GAAII,IAAYC,KAAKH,EAAiB,EAAGI,GAAG,GACxCC,GAAUF,KAAKT,EAAOY,WAAW,EAAGF,GAAG,EAC3Cd,GAAOI,EAAOa,SAASL,EAAUG,KAKvC,MAAOf,GA7HTP,OAAOyB,UAAUC,MAAM,SAASC,GA8C9B,QAASC,KACP,GAAIC,KAOJ,OALAF,GAAE,mBAAmB/B,KAAK,WACxB,GAAIN,GAAOH,WAAWwC,EAAEG,MACxBD,GAAOE,KAAKzC,KAGPuC,EAGT,QAASG,KACP,GAAItB,GAAO,EAUX,OATAV,QAAO,qBAAqBJ,KAAK,SAASC,EAAOC,GAC/C,GAAImC,GAAUjC,OAAOF,GAASoC,WAAWzC,KAAK,OAG9CwC,GAAQxC,KAAK,OAAO0C,SAEpBzB,EAAOA,EAAO,KAAOuB,EAAQvB,SAGxBA,EAnETiB,EAAE,wBAAwBS,MAAM,WAC9B,GAAIC,GAAkBT,IAClBU,EAAmBN,IAEnBO,GACFC,OAAU,aACVX,OAAUQ,EACVI,QAAWC,YAAYD,QACvBE,oBAAuBD,YAAYC,qBAGjCC,GACFJ,OAAU,cACVK,QAAWP,EACXG,QAAWC,YAAYD,QACvBK,WAAe,QACfH,oBAAuBD,YAAYC,oBAIrChB,GAAEoB,KAAKL,YAAYM,SAAUJ,GAG7BjB,EAAEoB,KAAKL,YAAYM,SAAUT,KAG/BZ,EAAE,iBAAiBS,MAAM,WACvB,GAAIE,GAAmBN,IAEnBY,GACFJ,OAAU,cACVK,QAAWP,EACXG,QAAWC,YAAYD,QACvBK,WAAe,OACfH,oBAAuBD,YAAYC,oBAIrChB,GAAEoB,KAAKL,YAAYM,SAAUJ","file":"snowball-ajax.min.js","sourcesContent":["jQuery(document).ready(function($) {\n  $(\"#publish, #save-post\").click(function() {\n    var blocksRetrieved = retrieveBlocks();\n    var articleRetrieved = retrieveRenderedPage();\n\n    var blocks_data = {\n      \"action\": \"add_blocks\",\n      \"blocks\": blocksRetrieved,\n      \"post_id\": ajax_object.post_id,\n      \"snowball_ajax_nonce\": ajax_object.snowball_ajax_nonce\n    };\n\n    var article_data = {\n      \"action\": \"add_article\",\n      \"article\": articleRetrieved,\n      \"post_id\": ajax_object.post_id,\n      \"is_preview\" : \"false\",\n      \"snowball_ajax_nonce\": ajax_object.snowball_ajax_nonce\n    };\n\n    // adding article to db\n    $.post(ajax_object.ajax_url, article_data);\n\n    // adding blocks data to db\n    $.post(ajax_object.ajax_url, blocks_data);\n  });\n\n  $(\"#post-preview\").click(function() {\n    var articleRetrieved = retrieveRenderedPage();\n\n    var article_data = {\n      \"action\": \"add_article\",\n      \"article\": articleRetrieved,\n      \"post_id\": ajax_object.post_id,\n      \"is_preview\" : \"true\",\n      \"snowball_ajax_nonce\": ajax_object.snowball_ajax_nonce\n    };\n\n    // adding article to db\n    $.post(ajax_object.ajax_url, article_data);\n  });\n\n  /* \n    This function will traverse through all the html in all the blocks\n    and retrieve all the data about the block the user added.\n  */\n  function retrieveBlocks() {\n    var blocks = [];\n\n    $(\".snowball-block\").each(function() {\n      var data = parseBlock($(this));\n      blocks.push(data);\n    });\n\n    return blocks;\n  }\n\n  function retrieveRenderedPage() {\n    var html = '';\n    jQuery(\".snowball-preview\").each(function(index, element) {\n      var newHTML = jQuery(element).contents().find(\"body\");\n\n      // filter out svg code, which chokes the db\n      newHTML.find(\"svg\").remove();\n\n      html = html + \"\\n\" + newHTML.html();\n    });\n\n    return html;\n  }\n});\n\nfunction parseBlock(block) {\n  var type = block.data(\"type\");\n  var selector = \"input[type='text'][data-target], input[type='email'][data-target], input[type='range'][data-target], input[type='hidden'][data-target], input[type='radio'][data-target]:checked, input[type='checkbox'][data-target], textarea[data-target], select[data-target]\";\n  var inputs = block.find(\".snowball-tinker form\").first().find(selector);\n  var data = {};\n\n  if (inputs) {\n    data.blockType = type;\n\n    inputs.each(function(index, element) {\n      var dataTarget = jQuery(element).attr(\"data-target\");\n      var inputValue = jQuery(element).val();\n\n      if (jQuery(element).attr(\"type\") == \"checkbox\") {\n        inputValue = jQuery(element).is(\":checked\") ? true : false;\n      }\n\n      data[dataTarget] = inputValue;\n    });\n\n    data.customCss = retrieveCustomCss(block);\n  }\n\n  return data;\n}\n\n// this is the same function on\n// retrieveNonReadOnlyText except it has block as an argument.\nfunction retrieveCustomCss(block) {\n  var cm = block.find(\".snowball-code .CodeMirror\");\n  var code;\n\n  if (cm.length === 0) {\n    code = block.find(\"textarea[data-mode='css']\").html();\n  } else {\n    var editor = cm[1].CodeMirror;\n    var readOnlyMark = editor.getAllMarks();\n    code = editor.getValue();\n\n    if (readOnlyMark.length) {\n      var mark = readOnlyMark[0];\n      var lastReadOnlyLine = mark.lines.length;\n\n      if (lastReadOnlyLine < 2) {\n        code = editor.getValue();\n      } else {\n        var fromLine = {line:lastReadOnlyLine-1, ch:0};\n        var toLine = {line:editor.lastLine()+1, ch:0};\n        code = editor.getRange(fromLine, toLine);\n      }\n    }\n  }\n\n  return code;\n}\n"],"sourceRoot":"/source/"}